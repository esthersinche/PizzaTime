package com.utp.pizzatime.view.admin;

import com.utp.pizzatime.model.entity.Producto_modificar;
import com.utp.pizzatime.model.entity.Proveedor;
import com.utp.pizzatime.service.ProductoService;
import com.utp.pizzatime.service.ProveedorService;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class GestionarProductos extends javax.swing.JPanel {

    private ProductoService prodService = new ProductoService();
    private ProveedorService provService = new ProveedorService();

// Para mantener la lista en memoria
    private List<Producto_modificar> listaProductos;
    private List<Proveedor> listaProveedores;

    public GestionarProductos() {
        initComponents();
        table_head_color(tblProductos);
        cargarProveedores();
        cargarProductosEnTabla();
        cargarProveedoresEnTabla();
    }

    private void table_head_color(JTable tbprodgestioning) {
        DefaultTableCellRenderer header_ren = new DefaultTableCellRenderer();//deja personalizar, pinta celdas en una Jtable

        header_ren.setBackground(new Color(0, 109, 86));//color del bg
        header_ren.setForeground(Color.LIGHT_GRAY);//color del texto
        header_ren.setHorizontalAlignment(SwingConstants.CENTER);//lo pone en el centro

        tbprodgestioning.getTableHeader().setDefaultRenderer(header_ren);//agarra el header y le pone la cosa personalizada
    }

    private void cargarProveedores() {
        try {
            listaProveedores = provService.obtenerTodos();
            DefaultComboBoxModel<String> md = new DefaultComboBoxModel<>();
            for (Proveedor pr : listaProveedores) {
                md.addElement(pr.getNOMBRE_PROV());
            }
            cboProvIng.setModel(md);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error al cargar proveedores:\n" + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarProductosEnTabla() {
        try {
            listaProductos = prodService.listarTodos();
            DefaultTableModel md = (DefaultTableModel) tblProductos.getModel();
            md.setRowCount(0);
            for (Producto_modificar p : listaProductos) {
                md.addRow(new Object[]{
                    p.getID_PRO(),
                    p.getNOMBRE_PRO(),
                    p.getMEDIDA(),
                    p.getSTOCK_ACTUAL(),
                    p.getSTOCK_CAJAS(),
                    p.getSTOCK_MIN(),
                    p.getSTOCK_MAX(),
                    // Proveedor: buscamos nombre
                    listaProveedores.stream()
                    .filter(pr -> pr.getID_PROV().equals(p.getID_PROV()))
                    .map(Proveedor::getNOMBRE_PROV)
                    .findFirst().orElse(""),
                    p.getPRECIO(),
                    p.getDESCRIPCION()
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error al cargar productos:\n" + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarProveedoresEnTabla() {
        try {
            listaProveedores = provService.obtenerTodos();
            DefaultTableModel md = (DefaultTableModel) tblProveedor.getModel();
            md.setRowCount(0);
            for (Proveedor pr : listaProveedores) {
                md.addRow(new Object[]{
                    pr.getID_PROV(),
                    pr.getNOMBRE_PROV(),
                    pr.getTELEFONO(),
                    pr.getDIRECCION()
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error al cargar proveedores:\n" + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField9 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProveedor = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNomProv = new javax.swing.JTextField();
        btnEliminarProv = new javax.swing.JButton();
        btnBuscarProv = new javax.swing.JButton();
        txtIDProv = new javax.swing.JTextField();
        btnGuardarNuevoProv = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtTelefonoProv = new javax.swing.JTextField();
        btnEditarProv = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDirProv = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNomIng = new javax.swing.JTextField();
        txtStockMax = new javax.swing.JTextField();
        btnEliminarIng = new javax.swing.JButton();
        btnBuscarIng = new javax.swing.JButton();
        txtIDIng = new javax.swing.JTextField();
        btnGuardarNuevoIng = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMedida = new javax.swing.JTextField();
        txtStockMin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnEditarIng = new javax.swing.JButton();
        cboProvIng = new javax.swing.JComboBox<>();
        txtDesc = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();

        jTextField9.setText("jTextField1");

        setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(0, 109, 86));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Telefono", "Direccion"
            }
        ));
        jScrollPane2.setViewportView(tblProveedor);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 720, 190));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(110, 104, 104));
        jLabel12.setText("Telefono:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 109, 86));
        jLabel13.setText("Gestionar Proveedor");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 6, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(110, 104, 104));
        jLabel7.setText("ID: ");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 50, -1, -1));
        jPanel3.add(txtNomProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 210, 25));

        btnEliminarProv.setBackground(new java.awt.Color(0, 109, 86));
        btnEliminarProv.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnEliminarProv.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarProv.setText("Eliminar");
        btnEliminarProv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnEliminarProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProvActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminarProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 86, 36));

        btnBuscarProv.setBackground(new java.awt.Color(204, 204, 204));
        btnBuscarProv.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnBuscarProv.setForeground(new java.awt.Color(0, 109, 86));
        btnBuscarProv.setText("Buscar");
        btnBuscarProv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnBuscarProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProvActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuscarProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 86, 36));
        jPanel3.add(txtIDProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 47, 470, 25));

        btnGuardarNuevoProv.setBackground(new java.awt.Color(0, 109, 86));
        btnGuardarNuevoProv.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnGuardarNuevoProv.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarNuevoProv.setText("Guardar Nuevo");
        btnGuardarNuevoProv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnGuardarNuevoProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNuevoProvActionPerformed(evt);
            }
        });
        jPanel3.add(btnGuardarNuevoProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, 180, 36));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(110, 104, 104));
        jLabel15.setText("Nombre: ");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(110, 104, 104));
        jLabel17.setText("Direccion:");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, -1, -1));
        jPanel3.add(txtTelefonoProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 210, 25));

        btnEditarProv.setBackground(new java.awt.Color(204, 204, 204));
        btnEditarProv.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnEditarProv.setForeground(new java.awt.Color(0, 109, 86));
        btnEditarProv.setText("Editar");
        btnEditarProv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnEditarProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProvActionPerformed(evt);
            }
        });
        jPanel3.add(btnEditarProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 160, 86, 36));

        txtDirProv.setColumns(20);
        txtDirProv.setRows(5);
        jScrollPane3.setViewportView(txtDirProv);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, -1, -1));

        jTabbedPane1.addTab("Gestión de Proveedor", jPanel3);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Medida", "Stock_actual", "Stock Caja", "Stock_min", "Stock_max", "Proovedor", "Precio", "Descripción"
            }
        ));
        jScrollPane1.setViewportView(tblProductos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 720, 190));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(110, 104, 104));
        jLabel10.setText("Medida: ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 133, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 109, 86));
        jLabel11.setText("Gestionar Ingrediente");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 6, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(110, 104, 104));
        jLabel4.setText("Proveedor:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(110, 104, 104));
        jLabel1.setText("ID: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 50, -1, -1));
        jPanel1.add(txtNomIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 90, 170, 25));
        jPanel1.add(txtStockMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 170, 25));

        btnEliminarIng.setBackground(new java.awt.Color(0, 109, 86));
        btnEliminarIng.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnEliminarIng.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarIng.setText("Eliminar");
        btnEliminarIng.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnEliminarIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarIngActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 86, 36));

        btnBuscarIng.setBackground(new java.awt.Color(204, 204, 204));
        btnBuscarIng.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnBuscarIng.setForeground(new java.awt.Color(0, 109, 86));
        btnBuscarIng.setText("Buscar");
        btnBuscarIng.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnBuscarIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIngActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscarIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 86, 36));
        jPanel1.add(txtIDIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 47, 470, 25));

        btnGuardarNuevoIng.setBackground(new java.awt.Color(0, 109, 86));
        btnGuardarNuevoIng.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnGuardarNuevoIng.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarNuevoIng.setText("Guardar Nuevo");
        btnGuardarNuevoIng.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnGuardarNuevoIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNuevoIngActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarNuevoIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, 180, 36));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(110, 104, 104));
        jLabel8.setText("Descripción: ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(110, 104, 104));
        jLabel3.setText("Nombre: ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 93, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(110, 104, 104));
        jLabel6.setText("Precio: ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(110, 104, 104));
        jLabel9.setText("Stock min: ");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));
        jPanel1.add(txtMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 133, 170, 25));
        jPanel1.add(txtStockMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 170, 25));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(110, 104, 104));
        jLabel2.setText("Stock max: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        btnEditarIng.setBackground(new java.awt.Color(204, 204, 204));
        btnEditarIng.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnEditarIng.setForeground(new java.awt.Color(0, 109, 86));
        btnEditarIng.setText("Editar");
        btnEditarIng.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        btnEditarIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarIngActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditarIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 160, 86, 36));

        cboProvIng.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cboProvIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 170, -1));
        jPanel1.add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 170, -1));
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 170, -1));

        jTabbedPane1.addTab("Gestión de Ingredientes", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIngActionPerformed
        String id = txtIDIng.getText().trim();
        if (id.isEmpty()) {
            return;
        }
        try {
            Producto_modificar p = prodService.buscarPorId(id);
            if (p == null) {
                JOptionPane.showMessageDialog(this, "No existe ese ID");
                return;
            }
            // Cargo los campos en la UI (pero sin tocar stock_actual ni stock_cajas)
            txtNomIng.setText(p.getNOMBRE_PRO());
            txtMedida.setText(String.valueOf(p.getMEDIDA()));
            txtStockMin.setText(String.valueOf(p.getSTOCK_MIN()));
            txtStockMax.setText(String.valueOf(p.getSTOCK_MAX()));
            txtPrecio.setText(String.valueOf(p.getPRECIO()));
            txtDesc.setText(p.getDESCRIPCION());

            // Seleccionar proveedor en combo
            String provNombre = listaProveedores.stream()
                    .filter(pr -> pr.getID_PROV().equals(p.getID_PROV()))
                    .map(Proveedor::getNOMBRE_PROV)
                    .findFirst().orElse("");
            cboProvIng.setSelectedItem(provNombre);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarIngActionPerformed

    private void btnEliminarIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarIngActionPerformed
        String id = txtIDIng.getText().trim();
        if (id.isEmpty()) {
            return;
        }
        try {
            prodService.eliminarProducto(id);
            cargarProductosEnTabla();
            JOptionPane.showMessageDialog(this, "Producto eliminado");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarIngActionPerformed

    private void btnEditarIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarIngActionPerformed
        try {
            // Leemos igual que en Guardar
            String id = txtIDIng.getText().trim();
            String nom = txtNomIng.getText().trim();
            int medida = Integer.parseInt(txtMedida.getText().trim());
            int min = Integer.parseInt(txtStockMin.getText().trim());
            int max = Integer.parseInt(txtStockMax.getText().trim());
            String provN = (String) cboProvIng.getSelectedItem();
            double precio = Double.parseDouble(txtPrecio.getText().trim());
            String desc = txtDesc.getText().trim();

            String idProv = listaProveedores.stream()
                    .filter(pr -> pr.getNOMBRE_PROV().equals(provN))
                    .map(Proveedor::getID_PROV)
                    .findFirst().orElse(null);

            // Recuperamos el producto existente para no alterar stock_actual ni stock_cajas
            Producto_modificar orig = prodService.buscarPorId(id);
            if (orig == null) {
                JOptionPane.showMessageDialog(this, "ID no encontrado");
                return;
            }

            // Creamos un nuevo objeto con valores actualizados
            Producto_modificar p = new Producto_modificar(
                    medida,
                    orig.getSTOCK_ACTUAL(),
                    orig.getSTOCK_CAJAS(),
                    min,
                    max,
                    idProv,
                    desc,
                    id, nom, precio
            );
            prodService.actualizarProducto(p);
            cargarProductosEnTabla();
            JOptionPane.showMessageDialog(this, "Producto actualizado");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato numérico inválido");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnEditarIngActionPerformed

    private void btnGuardarNuevoIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNuevoIngActionPerformed
        try {
            String id = txtIDIng.getText().trim();
            String nom = txtNomIng.getText().trim();
            int medida = Integer.parseInt(txtMedida.getText().trim());
            int min = Integer.parseInt(txtStockMin.getText().trim());
            int max = Integer.parseInt(txtStockMax.getText().trim());
            String provN = (String) cboProvIng.getSelectedItem();
            double precio = Double.parseDouble(txtPrecio.getText().trim());
            String desc = txtDesc.getText().trim();

            // Buscamos ID_PROV
            String idProv = listaProveedores.stream()
                    .filter(pr -> pr.getNOMBRE_PROV().equals(provN))
                    .map(Proveedor::getID_PROV)
                    .findFirst().orElse(null);

            // Al crear pones stock_actual y stock_cajas en 0
            Producto_modificar p = new Producto_modificar(
                    medida, 0, 0, min, max, idProv, desc,
                    id, nom, precio
            );
            prodService.crearProducto(p);
            cargarProductosEnTabla();
            JOptionPane.showMessageDialog(this, "Producto creado");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato numérico inválido");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnGuardarNuevoIngActionPerformed

    private void btnBuscarProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProvActionPerformed
        String id = txtIDProv.getText().trim();
        if (id.isEmpty()) {
            return;
        }
        try {
            Proveedor pr = provService.obtenerPorId(id);
            if (pr == null) {
                JOptionPane.showMessageDialog(this, "No existe ese ID");
                return;
            }
            // Cargo los campos en la UI (pero sin tocar stock_actual ni stock_cajas)
            txtNomProv.setText(pr.getNOMBRE_PROV());
            txtTelefonoProv.setText(String.valueOf(pr.getTELEFONO()));
            txtDirProv.setText(pr.getDIRECCION());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarProvActionPerformed

    private void btnEliminarProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProvActionPerformed
        String id = txtIDProv.getText().trim();
        if (id.isEmpty()) {
            return;
        }
        try {
            provService.eliminarProveedor(id);
            cargarProveedoresEnTabla();
            JOptionPane.showMessageDialog(this, "Proveedor eliminado");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarProvActionPerformed

    private void btnEditarProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProvActionPerformed
        try {
            // Leemos igual que en Guardar
            String id = txtIDProv.getText().trim();
            String nom = txtNomProv.getText().trim();
            int telf = Integer.parseInt(txtTelefonoProv.getText().trim());
            String dir = txtDirProv.getText().trim();

            Proveedor pr = new Proveedor(
                    id, nom, telf, dir
            );

            provService.actualizarProveedor(pr);
            cargarProductosEnTabla();
            JOptionPane.showMessageDialog(this, "Producto actualizado");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato numérico inválido");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnEditarProvActionPerformed

    private void btnGuardarNuevoProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNuevoProvActionPerformed
        try {
            String id = txtIDProv.getText().trim();
            String nom = txtNomProv.getText().trim();
            int telf = Integer.parseInt(txtTelefonoProv.getText().trim());
            String dir = txtDirProv.getText().trim();

            Proveedor pr = new Proveedor(
                    id, nom, telf, dir
            );
            provService.crearProveedor(pr);
            cargarProductosEnTabla();
            JOptionPane.showMessageDialog(this, "Producto creado");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato numérico inválido");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error BD:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnGuardarNuevoProvActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarIng;
    private javax.swing.JButton btnBuscarProv;
    private javax.swing.JButton btnEditarIng;
    private javax.swing.JButton btnEditarProv;
    private javax.swing.JButton btnEliminarIng;
    private javax.swing.JButton btnEliminarProv;
    private javax.swing.JButton btnGuardarNuevoIng;
    private javax.swing.JButton btnGuardarNuevoProv;
    private javax.swing.JComboBox<String> cboProvIng;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblProveedor;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextArea txtDirProv;
    private javax.swing.JTextField txtIDIng;
    private javax.swing.JTextField txtIDProv;
    private javax.swing.JTextField txtMedida;
    private javax.swing.JTextField txtNomIng;
    private javax.swing.JTextField txtNomProv;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStockMax;
    private javax.swing.JTextField txtStockMin;
    private javax.swing.JTextField txtTelefonoProv;
    // End of variables declaration//GEN-END:variables
}
